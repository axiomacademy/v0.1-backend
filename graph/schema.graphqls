# GraphQL schema example
#
# https://gqlgen.com/getting-started/

interface User {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  profilePic: String!
}

scalar Date

enum HeartbeatStatus {
  AVAILABLE
  UNAVAILABLE
}

############################## TYPES #####################################################

type Student implements User {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  profilePic: String!
}

type Tutor implements User {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  profilePic: String!
  hourlyRate: Int!
  bio: String!
  rating: Int!
  education: [String!]!
  subjects: [String!]!
}

type Lesson {
  id: ID!
  subject: String!
  summary: String!
  tutor: Tutor!
  student: Student!
  duration: Int!
  date: Date!
  chat: String!
}

type Notification {
  title: String!
  description: String!
}

type Heartbeat {
  status: HeartbeatStatus!
  lastSeen: Int!
}

#################################### INPUTS ################################################

input NewStudent {
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  profilePic: String!
}

input NewTutor {
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  profilePic: String!
  hourlyRate: Int!
  bio: String!
  education: [String!]!
  subjects: [String!]!
}

input LoginInfo {
  username: String!
  password: String!
}

############################### QUERIES ####################################################

type Query {
  self: User!,
  lessons: [Lesson!]!

  # Lesson id
  getLessonRoom(input: String!): String!

  # TODO: REMOVE AT SOME POINT IT IS ONLY FOR TESTING
  heartbeat(input: String!): Heartbeat!
}

############################### MUTATIONS ####################################################

type Mutation {
  createStudent(input: NewStudent!): String!
  loginStudent(input: LoginInfo!): String!

  createTutor(input: NewTutor!): String!
  loginTutor(input: LoginInfo!): String!
  refreshToken: String!

  updateHeartbeat(input: HeartbeatStatus!): String!

  # Lesson id
  createLessonRoom(input: String!): String!
  endLessonRoom(input: String!): String!
}

############################### MUTATIONS ####################################################
type Subscription {
  subscribeNotifications(user: String!): Notification!
}
